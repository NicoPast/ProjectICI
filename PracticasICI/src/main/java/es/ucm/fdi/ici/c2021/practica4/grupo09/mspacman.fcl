FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;
	BLINKYconfidence : REAL;
	PINKYconfidence : REAL;
	INKYconfidence : REAL;
	SUEconfidence : REAL;
	BLINKYedible : REAL;
	PINKYedible : REAL;
	INKYedible : REAL;
	SUEedible : REAL;
	PosibleEdible : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	runAway : REAL;
	eadable : REAL;
END_VAR

FUZZIFY BLINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (70, 0) ; 
	TERM medium := gauss 80 35;
	TERM far := (85, 0) (160, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (70, 0) ; 
	TERM medium := gauss 80 35;
	TERM far := (85, 0) (160, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (70, 0) ; 
	TERM medium := gauss 80 35;
	TERM far := (85, 0) (160, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (70, 0) ; 
	TERM medium := gauss 80 35;
	TERM far := (85, 0) (160, 1) (200, 1);
END_FUZZIFY

FUZZIFY BLINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(20,1)(50,0) ; 
	TERM medium := gauss 50 50;
	TERM high := (50,0)(80,1)(100,1);
END_FUZZIFY
FUZZIFY INKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(20,1)(50,0) ; 
	TERM medium := gauss 50 50;
	TERM high := (50,0)(80,1)(100,1);
END_FUZZIFY
FUZZIFY PINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(20,1)(50,0) ; 
	TERM medium := gauss 50 50;
	TERM high := (50,0)(80,1)(100,1);
END_FUZZIFY
FUZZIFY SUEconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(20,1)(50,0) ; 
	TERM medium := gauss 50 50;
	TERM high := (50,0)(80,1)(100,1);
END_FUZZIFY

DEFUZZIFY runAway			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY edible
	TERM low := (0, 1) (60, 0) ; 
	TERM high := (50, 0) (150, 1) (200, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

FUZZIFY BLINKYedible			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,0)(100, 0.25); 
	TERM high := (25, 0)(100, 1);
END_FUZZIFY
FUZZIFY PINKYedible			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,0)(100, 0.25) ; 
	TERM high := (25, 0)(100, 1);
END_FUZZIFY
FUZZIFY INKYedible			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,0)(100, 0.25) ; 
	TERM high := (25, 0)(100, 1);
END_FUZZIFY
FUZZIFY SUEedible			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,0)(100, 0.25) ; 
	TERM high := (25, 0)(100, 1);
END_FUZZIFY

FUZZIFY PosibleEdible // Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,0)(100, 0.25) ; 
	TERM high := (25, 0)(100, 1);
END_FUZZIFY


RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF BLINKYdistance IS near AND BLINKYconfidence IS high THEN runAway IS emergency;
	RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS high THEN runAway IS emergency;
	RULE 3 : IF INKYdistance IS near AND INKYconfidence IS high THEN runAway IS emergency;
	RULE 4 : IF SUEdistance IS near AND SUEconfidence IS high THEN runAway IS emergency;
	RULE 5 : IF BLINKYconfidence IS medium THEN runAway IS nervious;
	RULE 6 : IF PINKYconfidence IS medium THEN runAway IS nervious;
	RULE 7 : IF INKYconfidence IS medium THEN runAway IS nervious;
	RULE 8 : IF SUEconfidence IS medium THEN runAway IS nervious;
	RULE 9 : IF BLINKYdistance IS far THEN runAway IS calm;
	RULE 10 : IF PINKYdistance IS far THEN runAway IS calm;
	RULE 11 : IF INKYdistance IS far THEN runAway IS calm;
	RULE 12 : IF SUEdistance IS far THEN runAway IS calm;
	
	RULE 13 : IF BLINKYedible IS high AND PosibleEdible IS high THEN edible IS high;
	RULE 14 : IF PINKYedible IS high AND PosibleEdible IS high THEN edible IS high;
	RULE 15 : IF INKYedible IS high AND PosibleEdible IS high THEN edible IS high;
	RULE 16 : IF SUEedible IS high AND PosibleEdible IS high THEN edible IS high;
	RULE 17 : IF BLINKYedible IS low THEN edible IS low;
	RULE 18 : IF PINKYedible IS low THEN edible IS low;
	RULE 19 : IF INKYedible IS low THEN edible IS low;
	RULE 20 : IF SUEedible IS low THEN edible IS low;
	
END_RULEBLOCK

END_FUNCTION_BLOCK

